name: Build GraalVM Docker Images

on:
  push:
    branches: [ main, master ]
    paths:
      - 'Dockerfile'
      - 'entrypoint.sh'
      - '.github/workflows/build.yml'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        graalvm_version: ["8", "11", "17", "20", "21", "22", "23", "24"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine base image
        id: base-image
        run: |
          case "${{ matrix.graalvm_version }}" in
            "8")
              echo "BASE_IMAGE=ghcr.io/graalvm/graalvm-ce:ol8-java8-21.1.0" >> $GITHUB_OUTPUT
              ;;
            "11")
              echo "BASE_IMAGE=ghcr.io/graalvm/graalvm-ce:ol8-java11-22.3.3" >> $GITHUB_OUTPUT
              ;;          
            "17")
              echo "BASE_IMAGE=ghcr.io/graalvm/jdk-community:17" >> $GITHUB_OUTPUT
              ;;
            "20")
              echo "BASE_IMAGE=ghcr.io/graalvm/jdk-community:20" >> $GITHUB_OUTPUT
              ;;          
            "21")
              echo "BASE_IMAGE=ghcr.io/graalvm/jdk-community:21" >> $GITHUB_OUTPUT
              ;;
            "22")
              echo "BASE_IMAGE=ghcr.io/graalvm/jdk-community:22" >> $GITHUB_OUTPUT
              ;;
            "23")
              echo "BASE_IMAGE=ghcr.io/graalvm/jdk-community:23" >> $GITHUB_OUTPUT
              ;;
            "24")
              echo "BASE_IMAGE=ghcr.io/graalvm/jdk-community:24" >> $GITHUB_OUTPUT
              ;;          
            *)
              echo "Unsupported GraalVM version: ${{ matrix.graalvm_version }}"
              exit 1
              ;;
          esac

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ matrix.graalvm_version }}
            type=raw,value=graalvm${{ matrix.graalvm_version }}
            type=raw,value=latest,enable=${{ matrix.graalvm_version == '21' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASE_IMAGE=${{ steps.base-image.outputs.BASE_IMAGE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max